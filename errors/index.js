// Generated by CoffeeScript 1.7.1
"use strict";
var InstanceError, assertInstance, stringifyError,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

InstanceError = (function(_super) {
  __extends(InstanceError, _super);

  InstanceError.prototype.name = "InstanceError";

  function InstanceError(message) {
    this.message = message != null ? message : "Wrong instance of object";
    InstanceError.__super__.constructor.apply(this, arguments);
    Error.captureStackTrace(this, InstanceError);
  }

  return InstanceError;

})(Error);

stringifyError = function(err) {
  var cache, plainObject, result;
  plainObject = {};
  Object.getOwnPropertyNames(err).forEach(function(key) {
    return plainObject[key] = err[key];
  });
  cache = [];
  result = JSON.stringify(plainObject, function(key, value) {
    if (typeof value === 'object' && value !== null) {
      if (cache.indexOf(value) !== -1) {
        return;
      }
      cache.push(value);
    }
    return value;
  });
  cache = null;
  return result;
};

assertInstance = function(obj, constructor) {
  if (!(obj instanceof constructor)) {
    throw new InstanceError();
  }
};

module.exports = {
  InstanceError: InstanceError,
  assertInstance: assertInstance,
  stringifyError: stringifyError
};
